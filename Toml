
[headers]
  for = "/*"  # Applique à tous les fichiers

  [headers.values]
    # 🔒 Protection contre le MIME-sniffing
    X-Content-Type-Options = "nosniff"

    # 🛡️ Anti-clickjacking (modern approach)
    X-Frame-Options = "DENY"
    Permissions-Policy = "fullscreen=(self)"

    # 🌐 Contrôle des référents
    Referrer-Policy = "strict-origin-when-cross-origin"

    # 🔐 Politique de sécurité avancée (CSP 3.0)
    Content-Security-Policy = """
      default-src 'self';
      script-src 'self' 'wasm-unsafe-eval' https://www.googletagmanager.com;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
      img-src 'self' data: https://*.firebaseio.com;
      font-src 'self' https://fonts.gstatic.com;
      connect-src 'self' https://*.googleapis.com wss://*.firebaseio.com;
      media-src 'self';
      object-src 'none';
      frame-src 'self' https://www.youtube.com;
      worker-src 'self' blob:;
      base-uri 'self';
      form-action 'self';
      upgrade-insecure-requests;
    """.replace("\n", " ")

    # 🛑 Protection contre les attaques XSS (mode strict)
    X-XSS-Protection = "1; mode=block"

    # 📛 Isolation des cookies
    Cross-Origin-Opener-Policy = "same-origin"
    Cross-Origin-Embedder-Policy = "require-corp"
    Cross-Origin-Resource-Policy = "same-site"

    # ⚡ Optimisation des performances
    Cache-Control = "public, max-age=3600, must-revalidate"
    Strict-Transport-Security = "max-age=63072000; includeSubDomains; preload"
[headers.values]
  X-Content-Type-Options = "nosniff"  # Block MIME-sniffing
[build.processing]
  bundle = true
  minify = true
  compress = ["brotli", "gzip"]  # Netlify Pro uniquement
img-src 'self' data: https://*.firebaseio.com https://*.googleapis.com;
connect-src 'self' https://*.googleapis.com wss://*.firebaseio.com;
frame-src 'self' https://www.youtube.com;
font-src 'self' https://fonts.gstatic.com;
style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
Content-Security-Policy-Report-Only = "..."
Report-To = "{...}"
